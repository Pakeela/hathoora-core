# configuration file for 'prod' environment
logger:
    profiling: 0
    logging: 
        enabled: 0
        level: ERROR
    webprofiler: 
        enabled: 0
database:
    default: 
        # Server pool configurations:
        #
        # failover - When a server becomes unavailable then following logics is applied:
        #       default:  With default configuration in the event when server becomes unreachable, then following logic is applied:
        #                   Write: If master server is not reachable for write, then next writeable master (if any) will be used based on weight. 
        #                   Read: If slave server is not reachable for reads, the next slave (if any) will be used based on weight.
        #                       1.  If there are no slave servers available then master read only server (if any) will be used based on weight.
        #                       2.  If there is still no read only master server, then next master with allow_read (if any) will be used based on weight
        #       custom: An array containing class and method to call. User can specify which db server to use. 
        #                     This gives user the flexibility to pick a db based on  db health, concurrent threads etc..
        #       
        # DB server configurations:
        # role - In advance db setup, there are two types of roles:
        #   master - used for read and/or write
        #   slave - used for read
        #
        # read_only - (default: false) There is a 'readonly' mode which would not allow any writes to specified master db.  Read only masters are usually passive in nature, or hot stand by
        #   In read only mode data is not written to dsn and any query except for SELECT is ignored and result in empty result set
        #
        # allow_read -  (default: true)To  allow reads from master when there is no slave, no read only master db
        # Cannot use allow_read & rad_only for the master
        #
        # weight - For the same roles a database with higher weight is picked first.
        # options - Options for dsn adapter
        # on_connect - Any sql commands to run on connect
                # failover default
        failover: default
                     # custom logic
         # @TODO
        #failover: [\class, method]
        servers:
            dbMaster1:
                dsn: mysqli://dbuser:dbpassword@dbhost:3306/dbname
                role: master
                allow_read: false
                weight: 1
                on_connect:
                    - SET NAMES utf8;
            dbMaster2:
                dsn: mysqli://dbuser:dbpassword@dbhost:3306/dbname
                role: master
                read_only: true
                weight: 2
                on_connect:
                    - SET NAMES utf8;
            dbSlave1:
                dsn: mysqli://dbuser:dbpassword@dbhost:3306/dbname
                role: slave
                weight: 1
                on_connect:
                    - SET NAMES default;
 
    # simple dsn
    db2: mysqli://dbuser:dbpassword@dbhost:3306/dbname

template:
    engine:
        name: Smarty
    Smarty:
        caching: 0
        cache_lifetime: 0
        cache_dir: /tmp/smarty_template_cache
        compile_dir: /tmp/smarty_templates_c
        force_compile: 0
        compile_check: 1